pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "nginx"  // Imagem do Docker Hub
        K8S_NAMESPACE = "default"                   // Namespace Kubernetes
        DEPLOY_FILE = "nginx/niginx-deploy.yaml"         // Arquivo de deploy
    }

    stages {
        // --- STAGE 1: Baixar imagem e verificar ---
        stage('Pull Docker Image') {
            steps {
                script {
                    try {
                        sh "docker pull ${DOCKER_IMAGE}:latest"
                        sh "docker inspect ${DOCKER_IMAGE}:latest"
                    } catch (Exception e) {
                        error "Falha ao baixar a imagem: ${e.message}"
                    }
                }
            }
        }

        // --- STAGE 2: Deploy no Kubernetes ---
        stage('Deploy to Kubernetes') {
            steps {
                withKubeConfig([credentialsId: 'kubernetes-cred']) {  // Credencial do kubeconfig
                    script {
                        // Atualiza o arquivo YAML com a vers√£o desejada (opcional)
                        sh """
                            sed -i 's|image:.*|image: ${DOCKER_IMAGE}:latest|g' ${DEPLOY_FILE}
                        """

                        // Aplica o deployment
                        sh """
                            kubectl apply -f ${DEPLOY_FILE} -n ${K8S_NAMESPACE} && \
                            kubectl rollout status deployment/${DOCKER_IMAGE} -n ${K8S_NAMESPACE} --timeout=90s
                        """
                    }
                }
            }
        }
    }
}